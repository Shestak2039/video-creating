#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os
import traceback
import argparse

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –ø–µ—á–∞—Ç–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å–∫–∞
print("–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω!")

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π
current_dir = os.path.dirname(os.path.abspath(__file__))
if current_dir not in sys.path:
    sys.path.append(current_dir)

print(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø—É—Ç—å: {current_dir}")
print(f"–ü—É—Ç—å –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π: {sys.path}")

try:
    print("–ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ video_handler...")
    from video_handler import VideoProcessor
    print("–ò–º–ø–æ—Ä—Ç video_handler —É—Å–ø–µ—à–µ–Ω")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ: {e}")
    traceback.print_exc()
    sys.exit(1)

def parse_arguments():
    parser = argparse.ArgumentParser(description="–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ YouTube")
    
    # –ì—Ä—É–ø–ø–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤–∏–¥–µ–æ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)
    source_group = parser.add_mutually_exclusive_group(required=True)
    source_group.add_argument("--video", help="URL –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    source_group.add_argument("--channel", help="URL –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∏–¥–µ–æ")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞
    parser.add_argument("--count", type=int, default=1, help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –∫–∞–Ω–∞–ª–∞")
    parser.add_argument("--skip", type=int, default=0, help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —Å –Ω–∞—á–∞–ª–∞ –∫–∞–Ω–∞–ª–∞")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ
    background_group = parser.add_mutually_exclusive_group()
    background_group.add_argument("--background", help="URL —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ")
    background_group.add_argument("--background-playlist", help="URL –ø–ª–µ–π–ª–∏—Å—Ç–∞ –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–≤–æ–¥–∞
    parser.add_argument("--output", default="output_parts", help="–ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    parser.add_argument("--final", default="final_with_subtitles.mp4", help="–ò–º—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞")
    
    return parser.parse_args()

# python main.py --channel https://www.youtube.com/@FilmIsNowEpicScenes/videos --count 2 --skip 2 --background-playlist https://www.youtube.com/playlist?list=PLdxE72LlkFodEb4jBP8ewH1-qfUcneR7Z

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        args = parse_arguments()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω –ª–∏ URL –≤–∏–¥–µ–æ –∏–ª–∏ –∫–∞–Ω–∞–ª–∞
        main_video_url = args.video
        channel_url = args.channel
        
        # –î–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ª–∏–±–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤–∏–¥–µ–æ, –ª–∏–±–æ –ø–ª–µ–π–ª–∏—Å—Ç
        background_video_url = args.background
        background_playlist_url = args.background_playlist
        
        # –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ —Ñ–æ–Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ
        if not background_video_url and not background_playlist_url:
            background_video_url = "https://www.youtube.com/watch?v=g8YF_d_sAyU"
        
        print("–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ VideoProcessor...")
        processor = VideoProcessor(
            main_video_url=main_video_url,
            channel_url=channel_url,
            videos_count=args.count,
            videos_skip=args.skip,
            background_video_url=background_video_url,
            background_playlist_url=background_playlist_url,
            output_folder=args.output,
            final_with_subtitles=args.final
        )
        
        print("–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
        result = processor.process()
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏: {'–£—Å–ø–µ—à–Ω–æ' if result else '–û—à–∏–±–∫–∞'}")
        
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        traceback.print_exc()

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ main()...")
    main()
    print("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞")

